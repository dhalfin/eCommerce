{"ast":null,"code":"var _jsxFileName = \"D:\\\\pcs_frontend\\\\khalfin_dinar_pcs_frontend_21_01_homeworks\\\\project\\\\eCommerce\\\\src\\\\components\\\\ShopSidebar\\\\left_components\\\\price.jsx\";\n// npm install --save rc-slider // slider library\nimport React from 'react';\nimport Spinner from '../../spinner';\nimport { connect } from 'react-redux';\nimport { updatePriceFilter } from '../../../store/action_creatores';\nimport * as PropTypes from 'prop-types';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Slider from 'rc-slider';\n\nfunction WidPrice(props) {\n  if (props.pricesLoading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    });\n  }\n\n  ;\n  const {\n    priceMin,\n    priceMax\n  } = props.prices[0];\n  const priceFilter = props.priceFilter;\n  let mIn = priceFilter[0];\n  let mAx = priceFilter[1];\n  const createSliderWithTooltip = Slider.createSliderWithTooltip;\n  const Range = createSliderWithTooltip(Slider.Range);\n\n  function sliderChange(e) {\n    mIn = e[0];\n    mAx = e[1];\n  }\n\n  function checkerModify() {\n    props.updatePriceFilter([mIn, mAx]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget price mb-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"widget-title mb-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseLeave: e => checkerModify(e),\n    onMouseUp: e => checkerModify(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Range, {\n    min: parseInt(priceMin),\n    max: parseInt(priceMax),\n    defaultValue: [`${priceFilter[0]}`, `${priceFilter[1]}`],\n    tipFormatter: value => `${value}$`,\n    onChange: e => sliderChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"range-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"$\", priceFilter[0], \" - $\", priceFilter[1]))));\n}\n\nconst mapStateToProps = store => {\n  return {\n    prices: store.app.prices.data,\n    priceFilter: store.app.priceFilter,\n    pricesLoading: store.app.isLoading.prices || false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updatePriceFilter: array => dispatch(updatePriceFilter(array))\n  };\n};\n\nWidPrice.propTypes = {\n  prices: PropTypes.array,\n  pricesLoading: PropTypes.bool,\n  priceFilter: PropTypes.array,\n  updatePriceFilter: PropTypes.func\n};\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(WidPrice));","map":{"version":3,"sources":["D:/pcs_frontend/khalfin_dinar_pcs_frontend_21_01_homeworks/project/eCommerce/src/components/ShopSidebar/left_components/price.jsx"],"names":["React","Spinner","connect","updatePriceFilter","PropTypes","Slider","WidPrice","props","pricesLoading","priceMin","priceMax","prices","priceFilter","mIn","mAx","createSliderWithTooltip","Range","sliderChange","e","checkerModify","parseInt","value","mapStateToProps","store","app","data","isLoading","mapDispatchToProps","dispatch","array","propTypes","bool","func","memo"],"mappings":"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","sourcesContent":["// npm install --save rc-slider // slider library\r\nimport React from 'react';\r\nimport Spinner from '../../spinner';\r\nimport { connect } from 'react-redux';\r\nimport { updatePriceFilter } from '../../../store/action_creatores';\r\nimport * as PropTypes from 'prop-types';\r\nimport 'rc-slider/assets/index.css';\r\nimport 'rc-tooltip/assets/bootstrap.css';\r\nimport Slider from 'rc-slider';\r\n\r\nfunction WidPrice(props) {\r\n\r\n    if (props.pricesLoading) {\r\n        return (<Spinner />);\r\n    };\r\n\r\n    const {\r\n        priceMin,\r\n        priceMax,\r\n    } = props.prices[0]\r\n\r\n    const priceFilter = props.priceFilter;\r\n\r\n    let mIn = priceFilter[0];\r\n    let mAx = priceFilter[1];\r\n\r\n    const createSliderWithTooltip = Slider.createSliderWithTooltip;\r\n    const Range = createSliderWithTooltip(Slider.Range);\r\n\r\n    function sliderChange(e) {\r\n        mIn = e[0];\r\n        mAx = e[1];\r\n    }\r\n\r\n    function checkerModify() {\r\n        props.updatePriceFilter([mIn, mAx])\r\n    }\r\n\r\n    return (\r\n        <div className=\"widget price mb-50\">\r\n            <h6 className=\"widget-title mb-30\">Price</h6>\r\n\r\n            <div className=\"widget-desc\">\r\n                <div className=\"slider-range\">\r\n\r\n                    <div>\r\n                        <div\r\n                            onMouseLeave={(e) => checkerModify(e)}\r\n                            onMouseUp={(e) => checkerModify(e)}\r\n                        >\r\n                            <Range\r\n                                min={parseInt(priceMin)}\r\n                                max={parseInt(priceMax)}\r\n                                defaultValue={[`${priceFilter[0]}`, `${priceFilter[1]}`]}\r\n                                tipFormatter={value => `${value}$`}\r\n                                onChange={(e) => sliderChange(e)}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"range-price\">\r\n                        ${priceFilter[0]} - ${priceFilter[1]}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        prices: store.app.prices.data,\r\n        priceFilter: store.app.priceFilter,\r\n        pricesLoading: store.app.isLoading.prices || false,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updatePriceFilter: (array) => dispatch(updatePriceFilter(array)),\r\n    };\r\n};\r\n\r\nWidPrice.propTypes = {\r\n    prices: PropTypes.array,\r\n    pricesLoading: PropTypes.bool,\r\n    priceFilter: PropTypes.array,\r\n    updatePriceFilter: PropTypes.func,\r\n};\r\n\r\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(WidPrice));"]},"metadata":{},"sourceType":"module"}