{"ast":null,"code":"var _jsxFileName = \"D:\\\\pcs_frontend\\\\khalfin_dinar_pcs_frontend_21_01_homeworks\\\\project\\\\eCommerce\\\\src\\\\pages\\\\cart.jsx\";\nimport React from 'react';\nimport CartProduct from '../components/cart/cart_product';\nimport { updateCart, updateSum, updateOnPageShopFilter, uploadDataToStore } from '../store/action_creatores';\nimport { connect } from 'react-redux';\nimport Spinner from \"../components/spinner\";\nimport * as PropTypes from 'prop-types';\nCartPage.propTypes = {\n  cart: PropTypes.array,\n  catalog: PropTypes.array,\n  catalogLoading: PropTypes.bool,\n  uploadDataToStore: PropTypes.func,\n  onShopPage: PropTypes.bool,\n  sum: PropTypes.number,\n  updateCart: PropTypes.func,\n  updateOnPageShopFilter: PropTypes.func,\n  updateSum: PropTypes.func\n};\n\nfunction CartPage(props) {\n  const {\n    cart,\n    catalog,\n    catalogLoading,\n    uploadDataToStore,\n    onShopPage,\n    sum,\n    updateCart,\n    updateOnPageShopFilter,\n    updateSum\n  } = props;\n  let newSum = sum;\n\n  if (onShopPage) {\n    uploadDataToStore(\"catalog\");\n    updateOnPageShopFilter(false);\n  }\n\n  ;\n\n  if (catalogLoading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    });\n  }\n\n  ;\n  SumCounter(); // вычислять сумму покупок лучше на сервере. А то мало ли, что юзер в локалсторожа запишет. Локалсторож - чисто хомячью для удобства.\n\n  function SumCounter() {\n    // вычисляем сумму всех покупок\n    newSum = 0;\n\n    for (let i = 0; i < cart.length; i++) {\n      for (let j = 0; j < catalog.length; j++) {\n        if (cart[i].item === catalog[j].id) {\n          let curSum = catalog[j].price * cart[i].amount; // newSum = + newSum + curSum;\n\n          newSum = newSum + curSum;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    updateSum(newSum); // обновляем сумму в state\n  }\n\n  ;\n\n  const handlerCartQuantity = (operator, ident) => {\n    if (operator === \"plus\") {\n      // увеличиваем количество товара\n      let currentItem = catalog.find(elem => elem.id === ident);\n\n      for (let i = 0; i < cart.length; i++) {\n        if (cart[i].item === ident) {\n          if (cart[i].amount < Number(currentItem.available)) {\n            cart[i].amount++;\n            updateCart(cart);\n          } else {\n            alert(`There are ${currentItem.available} of these products in warehouse!`);\n          }\n\n          ;\n        }\n\n        ;\n      }\n\n      ;\n    } else {\n      // уменьшаем количество товара\n      for (let i = 0; i < cart.length; i++) {\n        if (cart[i].item === ident) {\n          if (cart[i].amount > 1) {\n            cart[i].amount--;\n            updateCart(cart);\n          } else {\n            cart.splice(i, 1);\n            updateCart(cart);\n          }\n\n          ;\n        }\n\n        ;\n      }\n\n      ;\n    }\n\n    ;\n    localStorage.setItem(`cartInfo`, JSON.stringify(cart)); // обновляем локалсторож\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-table-area section-padding-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-lg-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-title mt-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"Shopping Cart\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-table clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 41\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  }, \"Quantity\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CartProduct, {\n    cart: cart,\n    catalog: catalog,\n    onChange: handlerCartQuantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, \"Cart Total\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"summary-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, \"subtotal:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 60\n    }\n  }, \"$\", newSum)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"delivery:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 60\n    }\n  }, \"Free\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, \"total:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 57\n    }\n  }, \"$\", sum))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-btn mt-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"cart.html\",\n    className: \"btn amado-btn w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, \"Checkout\")))))));\n}\n\n;\n\nconst mapStateToProps = store => {\n  return {\n    sum: store.app.sum,\n    cart: store.app.cart,\n    catalog: store.app.catalog.data,\n    catalogLoading: store.app.isLoading.catalog || false,\n    fuckingCrutch: store.app.fuckingCrutch\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCart: array => dispatch(updateCart(array)),\n    updateSum: number => dispatch(updateSum(number)),\n    uploadDataToStore: actions => dispatch(uploadDataToStore(actions)),\n    updateOnPageShopFilter: bool => dispatch(updateOnPageShopFilter(bool))\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(CartPage));","map":{"version":3,"sources":["D:/pcs_frontend/khalfin_dinar_pcs_frontend_21_01_homeworks/project/eCommerce/src/pages/cart.jsx"],"names":["React","CartProduct","updateCart","updateSum","updateOnPageShopFilter","uploadDataToStore","connect","Spinner","PropTypes","CartPage","propTypes","cart","array","catalog","catalogLoading","bool","func","onShopPage","sum","number","props","newSum","SumCounter","i","length","j","item","id","curSum","price","amount","handlerCartQuantity","operator","ident","currentItem","find","elem","Number","available","alert","splice","localStorage","setItem","JSON","stringify","mapStateToProps","store","app","data","isLoading","fuckingCrutch","mapDispatchToProps","dispatch","actions","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CartProduct from '../components/cart/cart_product';\r\nimport {\r\n    updateCart,\r\n    updateSum,\r\n    updateOnPageShopFilter,\r\n    uploadDataToStore,\r\n} from '../store/action_creatores';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from \"../components/spinner\";\r\nimport * as PropTypes from 'prop-types';\r\n\r\nCartPage.propTypes = {\r\n    cart: PropTypes.array,\r\n    catalog: PropTypes.array,\r\n    catalogLoading: PropTypes.bool,\r\n    uploadDataToStore: PropTypes.func,\r\n    onShopPage: PropTypes.bool,\r\n    sum: PropTypes.number,\r\n    updateCart: PropTypes.func,\r\n    updateOnPageShopFilter: PropTypes.func,\r\n    updateSum: PropTypes.func,\r\n};\r\n\r\nfunction CartPage(props) {\r\n\r\n    const {\r\n        cart,\r\n        catalog,\r\n        catalogLoading,\r\n        uploadDataToStore,\r\n        onShopPage,\r\n        sum,\r\n        updateCart,\r\n        updateOnPageShopFilter,\r\n        updateSum,\r\n    } = props;\r\n\r\n    let newSum = sum;\r\n\r\n    if (onShopPage) {\r\n            uploadDataToStore(\"catalog\");\r\n            updateOnPageShopFilter(false);\r\n    };\r\n\r\n    if (catalogLoading) {\r\n        return (<Spinner />);\r\n    };\r\n\r\n    SumCounter(); // вычислять сумму покупок лучше на сервере. А то мало ли, что юзер в локалсторожа запишет. Локалсторож - чисто хомячью для удобства.\r\n\r\n    function SumCounter() { // вычисляем сумму всех покупок\r\n        newSum = 0;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            for (let j = 0; j < catalog.length; j++) {\r\n                if (cart[i].item === catalog[j].id) {\r\n                    let curSum = catalog[j].price * cart[i].amount;\r\n                    // newSum = + newSum + curSum;\r\n                    newSum = newSum + curSum;\r\n                };\r\n            };\r\n        };\r\n        updateSum(newSum); // обновляем сумму в state\r\n    };\r\n\r\n    const handlerCartQuantity = (operator, ident) => {\r\n\r\n        if (operator === \"plus\") { // увеличиваем количество товара\r\n            let currentItem = catalog.find(elem => elem.id === ident)\r\n            for (let i = 0; i < cart.length; i++) {\r\n                if (cart[i].item === ident) {\r\n                    if (cart[i].amount < Number(currentItem.available)) {\r\n                        cart[i].amount++;\r\n                        updateCart(cart);\r\n                    } else {\r\n                        alert(`There are ${currentItem.available} of these products in warehouse!`);\r\n                    };\r\n                };\r\n            };\r\n        } else { // уменьшаем количество товара\r\n            for (let i = 0; i < cart.length; i++) {\r\n                if (cart[i].item === ident) {\r\n                    if (cart[i].amount > 1) {\r\n                        cart[i].amount--;\r\n                        updateCart(cart);\r\n                    } else {\r\n                        cart.splice(i, 1);\r\n                        updateCart(cart);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n        localStorage.setItem(`cartInfo`, JSON.stringify(cart)); // обновляем локалсторож\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-table-area section-padding-100\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"cart-title mt-50\">\r\n                            <h2>Shopping Cart</h2>\r\n                        </div>\r\n                        <div className=\"cart-table clearfix\">\r\n                            <table className=\"table table-responsive\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Quantity</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n                                    <CartProduct\r\n                                        cart={cart}\r\n                                        catalog={catalog}\r\n                                        onChange={handlerCartQuantity} />\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* выводим стоимость всех товаров */}\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"cart-summary\">\r\n                            <h5>Cart Total</h5>\r\n                            <ul className=\"summary-table\">\r\n                                <li><span>subtotal:</span> <span>${newSum}</span></li>\r\n                                <li><span>delivery:</span> <span>Free</span></li>\r\n                                <li><span>total:</span> <span>${sum}</span></li>\r\n                            </ul>\r\n                            <div className=\"cart-btn mt-100\">\r\n                                <a href=\"cart.html\" className=\"btn amado-btn w-100\">Checkout</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        sum: store.app.sum,\r\n        cart: store.app.cart,\r\n        catalog: store.app.catalog.data,\r\n        catalogLoading: store.app.isLoading.catalog || false,\r\n        fuckingCrutch: store.app.fuckingCrutch,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCart: (array) => dispatch(updateCart(array)),\r\n        updateSum: (number) => dispatch(updateSum(number)),\r\n        uploadDataToStore: (actions) => dispatch(uploadDataToStore(actions)),\r\n        updateOnPageShopFilter: (bool) => dispatch(updateOnPageShopFilter(bool)),\r\n    };\r\n};\r\n\r\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(CartPage));"]},"metadata":{},"sourceType":"module"}