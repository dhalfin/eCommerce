{"ast":null,"code":"var _jsxFileName = \"D:\\\\pcs_frontend\\\\khalfin_dinar_pcs_frontend_21_01_homeworks\\\\project\\\\src\\\\components\\\\ShopSidebar\\\\left_components\\\\brands.jsx\";\nimport React from 'react';\nimport Spinner from '../../spinner';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport { uploadDataToStore, loadNumerator } from '../../../store/action_creatores';\nColumnBrands.propTypes = {\n  brands: PropTypes.array,\n  brandsLoading: PropTypes.bool,\n  uploadDataToStore: PropTypes.func\n};\n\nfunction ColumnBrands(props) {\n  function brandHandler(e) {\n    props.loadNumerator(\"0\");\n\n    if (e.target.getAttribute(\"ident\") === \"ALL\") {\n      props.uploadDataToStore(\"catalog\");\n    } else {\n      props.uploadDataToStore(\"catalog\", `?brand=${e.target.getAttribute(\"ident\")}`);\n    }\n  }\n\n  function brandsCheckboxGenerator() {\n    if (props.brandsLoading) {\n      return /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      });\n    }\n\n    ;\n    return props.brands.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: brandHandler,\n        className: \"form-check-input\",\n        type: \"radio\",\n        name: \"brandFilter\",\n        id: item.id,\n        title: item.title,\n        defaultChecked: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, item.title));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget brands mb-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"widget-title mb-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Brands\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"widget-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: brandHandler,\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"brandFilter\",\n    id: \"ALL\",\n    title: \"ALL\",\n    defaultChecked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"ALL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"ALL\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), brandsCheckboxGenerator()));\n}\n\n;\n\nconst mapStateToProps = store => {\n  return {\n    brands: store.app.brands.data,\n    brandsLoading: store.app.isLoading.brands || false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uploadDataToStore: (actions, key) => dispatch(uploadDataToStore(actions, key)),\n    loadNumerator: string => dispatch(loadNumerator(string))\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(ColumnBrands));","map":{"version":3,"sources":["D:/pcs_frontend/khalfin_dinar_pcs_frontend_21_01_homeworks/project/src/components/ShopSidebar/left_components/brands.jsx"],"names":["React","Spinner","connect","PropTypes","uploadDataToStore","loadNumerator","ColumnBrands","propTypes","brands","array","brandsLoading","bool","func","props","brandHandler","e","target","getAttribute","brandsCheckboxGenerator","map","item","id","title","mapStateToProps","store","app","data","isLoading","mapDispatchToProps","dispatch","actions","key","string","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Spinner from '../../spinner';\r\nimport {connect} from 'react-redux';\r\nimport * as PropTypes from 'prop-types';\r\nimport {uploadDataToStore, loadNumerator} from '../../../store/action_creatores';\r\n\r\nColumnBrands.propTypes = {\r\n    brands: PropTypes.array,\r\n    brandsLoading: PropTypes.bool,\r\n    uploadDataToStore: PropTypes.func,\r\n};\r\n\r\nfunction ColumnBrands(props) {\r\n\r\n    function brandHandler(e) {\r\n        props.loadNumerator(\"0\");\r\n        if (e.target.getAttribute(\"ident\") === \"ALL\") {\r\n            props.uploadDataToStore(\"catalog\");\r\n        } else {\r\n            props.uploadDataToStore(\"catalog\", `?brand=${e.target.getAttribute(\"ident\")}`);\r\n        }\r\n    }\r\n\r\n    function brandsCheckboxGenerator() {\r\n\r\n        if (props.brandsLoading) {\r\n            return (<Spinner/>);\r\n        };\r\n\r\n        return props.brands.map((item) => {\r\n\r\n            return (\r\n                <div className=\"form-check\"\r\n                     key={item.id}\r\n                >\r\n                    <input\r\n                        onChange={brandHandler}\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"brandFilter\"\r\n                        id={item.id}\r\n                        title={item.title}\r\n                        defaultChecked={false}\r\n                    />\r\n                    <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor={item.title}>\r\n                        {item.title}\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"widget brands mb-50\">\r\n            <h6 className=\"widget-title mb-30\">Brands</h6>\r\n\r\n            <div className=\"widget-desc\">\r\n\r\n                {/*\"ALL\" is by default*/}\r\n\r\n                <div className=\"form-check\">\r\n                    <input\r\n                        onChange={brandHandler}\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"brandFilter\"\r\n                        id=\"ALL\"\r\n                        title=\"ALL\"\r\n                        defaultChecked={true}\r\n                    />\r\n                    <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"ALL\">\r\n                        ALL\r\n                    </label>\r\n                    <br/>\r\n                </div>\r\n\r\n                {brandsCheckboxGenerator()}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        brands: store.app.brands.data,\r\n        brandsLoading: store.app.isLoading.brands || false,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        uploadDataToStore: (actions, key) => dispatch(uploadDataToStore(actions, key)),\r\n        loadNumerator: (string) => dispatch(loadNumerator(string)),\r\n    };\r\n};\r\n\r\n\r\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(ColumnBrands));"]},"metadata":{},"sourceType":"module"}