{"ast":null,"code":"var _jsxFileName = \"D:\\\\pcs_frontend\\\\khalfin_dinar_pcs_frontend_21_01_homeworks\\\\project\\\\src\\\\components\\\\Search\\\\search.jsx\";\nimport React from 'react';\nimport { Input, Label } from 'reactstrap';\nimport axios from 'axios';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchSearchResults = (updatedPageNo = '', query) => {\n      const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : ''; // By default the limit of results is 20\n\n      const searchUrl = `http://test-api.ipromote.ru/API/CATALOG/FIND${query}${pageNumber}`; //http://test-api.ipromote.ru/API/CATALOG/FIND${key}\n\n      if (this.cancel) {\n        // Cancel the previous request before making a new request\n        this.cancel.cancel();\n      } // Create a new CancelToken\n\n\n      this.cancel = axios.CancelToken.source();\n      axios.get(searchUrl, {\n        cancelToken: this.cancel.token\n      }).then(res => {\n        const resultNotFoundMsg = !res.data.length ? 'There are no more search results. Please try a new search.' : '';\n        this.setState({\n          results: res.data,\n          message: resultNotFoundMsg,\n          loading: false\n        });\n      }).catch(error => {\n        if (axios.isCancel(error) || error) {\n          this.setState({\n            loading: false,\n            message: 'Failed to fetch results.Please check network'\n          });\n        }\n      });\n    };\n\n    this.handleOnInputChange = event => {\n      const query = event.target.value;\n\n      if (!query) {\n        this.setState({\n          query,\n          results: {},\n          message: ''\n        });\n      } else {\n        this.setState({\n          query,\n          loading: true,\n          message: ''\n        }, () => {\n          this.fetchSearchResults(1, query);\n        });\n      }\n    };\n\n    this.renderSearchResults = () => {\n      const {\n        results\n      } = this.state;\n\n      if (Object.keys(results).length && results.length) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"results-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, results.map(result => {\n          return /*#__PURE__*/React.createElement(\"a\", {\n            key: result.id,\n            href: result.previewURL,\n            className: \"result-items\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"h6\", {\n            className: \"image-username\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }\n          }, result.user), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"image-wrapper\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            className: \"image\",\n            src: result.previewURL,\n            alt: result.user,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }\n          })));\n        }));\n      }\n    };\n\n    this.state = {\n      query: '',\n      results: {},\n      loading: false,\n      message: ''\n    };\n    this.cancel = '';\n  }\n\n  render() {\n    const {\n      query\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"search-label\",\n      htmlFor: \"search-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      value: query,\n      id: \"search-input\",\n      placeholder: \"Search...\",\n      onChange: this.handleOnInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })), this.renderSearchResults());\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["D:/pcs_frontend/khalfin_dinar_pcs_frontend_21_01_homeworks/project/src/components/Search/search.jsx"],"names":["React","Input","Label","axios","Search","Component","constructor","props","fetchSearchResults","updatedPageNo","query","pageNumber","searchUrl","cancel","CancelToken","source","get","cancelToken","token","then","res","resultNotFoundMsg","data","length","setState","results","message","loading","catch","error","isCancel","handleOnInputChange","event","target","value","renderSearchResults","state","Object","keys","map","result","id","previewURL","user","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Input, Label } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass Search extends  React.Component {\r\n\r\n    constructor( props ) {\r\n        super( props );\r\n\r\n        this.state = {\r\n            query: '',\r\n            results: {},\r\n            loading: false,\r\n            message: '',\r\n        };\r\n        this.cancel = '';\r\n    }\r\n\r\n    fetchSearchResults = (updatedPageNo = '', query ) => {\r\n\r\n        const pageNumber = updatedPageNo ? `&page=${updatedPageNo}` : '';\r\n        // By default the limit of results is 20\r\n        const searchUrl = `http://test-api.ipromote.ru/API/CATALOG/FIND${query}${pageNumber}`;\r\n        //http://test-api.ipromote.ru/API/CATALOG/FIND${key}\r\n        if (this.cancel) {\r\n            // Cancel the previous request before making a new request\r\n            this.cancel.cancel();\r\n        }\r\n        // Create a new CancelToken\r\n        this.cancel = axios.CancelToken.source();\r\n\r\n        axios\r\n            .get(searchUrl, {\r\n                cancelToken: this.cancel.token,\r\n            })\r\n            .then((res) => {\r\n                const resultNotFoundMsg = !res.data.length\r\n                    ? 'There are no more search results. Please try a new search.'\r\n                    : '';\r\n\r\n                this.setState({\r\n                    results: res.data,\r\n                    message: resultNotFoundMsg,\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                if (axios.isCancel(error) || error) {\r\n                    this.setState({\r\n                        loading: false,\r\n                        message: 'Failed to fetch results.Please check network',\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    handleOnInputChange = (event) => {\r\n        const query = event.target.value;\r\n\r\n        if ( ! query ) {\r\n            this.setState({ query, results: {}, message: '' } );\r\n        } else {\r\n            this.setState({ query, loading: true, message: '' }, () => {\r\n                this.fetchSearchResults(1, query);\r\n            });\r\n        }\r\n    };\r\n\r\n    renderSearchResults = () => {\r\n        const {results} = this.state;\r\n\r\n        if (Object.keys(results).length && results.length) {\r\n            return (\r\n                <div className=\"results-container\">\r\n                    {results.map((result) => {\r\n                        return (\r\n                            <a key={result.id} href={result.previewURL} className=\"result-items\">\r\n                                <h6 className=\"image-username\">{result.user}</h6>\r\n                                <div className=\"image-wrapper\">\r\n                                    <img className=\"image\" src={result.previewURL} alt={result.user}/>\r\n                                </div>\r\n                            </a>\r\n                        );\r\n                    })}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { query } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                {/*Heading*/}\r\n                {/*<h2 className=\"heading\">Live Search: React Application</h2>*/}\r\n\r\n                {/*Search Input*/}\r\n                <Label className=\"search-label\" htmlFor=\"search-input\">\r\n                    <Input\r\n                        type=\"text\"\r\n                        value={query}\r\n                        id=\"search-input\"\r\n                        placeholder=\"Search...\"\r\n                        onChange={this.handleOnInputChange}\r\n                    />\r\n                    {/*<i className=\"fa fa-search search-icon\"/>*/}\r\n                </Label>\r\n                { this.renderSearchResults() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}